version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.2

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test-backends:
          requires:
            - build
          matrix:
            parameters:
              simapp: ["simapp47", "simapp50"]
      - test-chrome:
          requires:
            - build
      - coverage:
          requires:
            - build

jobs:
  build:
    docker:
      - image: cimg/node:18.20
    steps:
      - run:
          name: Install Git Large File Storage (LFS)
          command: sudo apt-get install git-lfs
      - checkout
      - run:
          name: Version information
          command: echo "node $(node --version)"; echo "yarn $(yarn --version)"
      - run:
          name: Install libusb
          command: |
            sudo apt update
            sudo apt install libusb-1.0-0-dev
      - run:
          name: Install Dependencies
          command: yarn install --immutable --immutable-cache --check-cache
      - run:
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - packages/*/build/*
  test-backends:
    parameters:
      simapp:
        type: string
    machine:
      # We can't use a containerized environment since it requires remote docker to start custom containers.
      # However, we can't access the remote docker's network from the primary container. This is a
      # feature, as documented in https://circleci.com/docs/2.0/building-docker-images/#separation-of-environments
      # As a consequence, we cannot use the circleci CLI for this job because "You cannot use the machine
      # executor in local jobs." (https://circleci.com/docs/2.0/local-cli/#limitations-of-running-jobs-locally)
      #
      # Available images: https://circleci.com/developer/machine/image/ubuntu-2004
      # Note that ubuntu-2004:202111-02 and above cause checksum issues when installing yarn packages. No idea why.
      image: ubuntu-2004:202111-02
    steps:
      - run:
          name: Install Git Large File Storage (LFS)
          # In the current image, `sudo apt install git-lfs` requires `sudo apt update` which is too slow
          command: |
            wget -O "$HOME/git-lfs.deb" https://packagecloud.io/github/git-lfs/packages/ubuntu/focal/git-lfs_2.13.3_amd64.deb/download.deb
            sudo dpkg -i "$HOME/git-lfs.deb"
      - checkout
      - run: # start early for less wait time below
          name: Start wasmd
          command: ./scripts/wasmd/start.sh
          background: true
      - run:
          name: Start simapp
          command: ./scripts/<< parameters.simapp >>/start.sh
          background: true
      - run:
          name: Start slow simapp
          command: ./scripts/<< parameters.simapp >>/slow_start.sh
          background: true
      - run:
          name: Start Tendermint blockchains
          command: ./scripts/tendermint/all_start.sh
          background: true
      - attach_workspace:
          at: /tmp/builds
      - run:
          name: Merge build folders into project (merge with hardlinks)
          command: cp --recursive --link /tmp/builds/* .
      - run:
          # The images comes with preinstalled nvm, which does not work well with non-login shells
          name: Uninstall nvm
          # Moving to trash is faster than deleting (gvfs-trash is not installed on this image)
          command: |
            nvm --version && nvm ls
            mkdir -p ~/.local/share/Trash && mv "$NVM_DIR" ~/.npm ~/.local/share/Trash
      - run:
          name: Install nodejs
          # In the current image, `sudo apt install nodejs` requires `sudo apt update` which is too slow.
          # Follow instructions of https://deb.nodesource.com/ except the last step. Then run
          # `apt download --print-uris nodejs` to get a download URL.
          command: |
            wget -O "$HOME/nodejs.deb" https://deb.nodesource.com/node_18.x/pool/main/n/nodejs/nodejs_18.17.1-1nodesource1_amd64.deb
            sudo dpkg -i "$HOME/nodejs.deb"
      - run:
          name: Install yarn
          command: |
            wget -O "$HOME/yarn.deb" https://dl.yarnpkg.com/debian/pool/main/y/yarn/yarn_1.22.15_all.deb
            sudo dpkg -i "$HOME/yarn.deb"
      - run:
          name: Version information
          command: echo "node $(node --version)"; echo "yarn $(yarn --version)"
      - run:
          name: Install libusb
          # In the current image, `sudo apt install libusb-1.0-0-dev` requires `sudo apt update` which is too slow
          command: |
            wget -O "$HOME/libusb.deb" http://de.archive.ubuntu.com/ubuntu/pool/main/libu/libusb-1.0/libusb-1.0-0-dev_1.0.23-2build1_amd64.deb
            sudo dpkg -i "$HOME/libusb.deb"
      - run:
          name: Install libudev-dev
          # See https://packages.ubuntu.com/focal/libudev-dev (Ubuntu 20.04)
          command: |
            wget -O "$HOME/libudev1.deb" http://security.ubuntu.com/ubuntu/pool/main/s/systemd/libudev1_245.4-4ubuntu3.20_amd64.deb
            wget -O "$HOME/libudev-dev.deb" http://security.ubuntu.com/ubuntu/pool/main/s/systemd/libudev-dev_245.4-4ubuntu3.20_amd64.deb
            sudo dpkg -i "$HOME/libudev1.deb"
            sudo dpkg -i "$HOME/libudev-dev.deb"
      - run:
          name: Install Dependencies
          command: yarn install --immutable --immutable-cache --check-cache
      - run:
          name: Initialize wasmd (deploy contracts and friends)
          command: ./scripts/wasmd/init.sh
      - run:
          name: Start socket server
          command: ./scripts/socketserver/start.sh
      - run:
          name: Start http server
          command: ./scripts/httpserver/start.sh
      - run:
          name: Run tests
          environment:
            HTTPSERVER_ENABLED: 1
            TENDERMINT_ENABLED: 1
            SOCKETSERVER_ENABLED: 1
            SKIP_BUILD: 1
            WASMD_ENABLED: 1
          command: |
            [ "<< parameters.simapp >>" = "simapp47" ] && export SIMAPP47_ENABLED=1 SLOW_SIMAPP47_ENABLED=1
            [ "<< parameters.simapp >>" = "simapp50" ] && export SIMAPP50_ENABLED=1 SLOW_SIMAPP50_ENABLED=1
            yarn test --stream
      - run:
          name: Run CLI selftest
          working_directory: packages/cli
          environment:
            SKIP_BUILD: 1
          command: yarn selftest
      - run:
          name: Run CLI examples
          working_directory: packages/cli
          environment:
            HTTPSERVER_ENABLED: 1
            TENDERMINT_ENABLED: 1
            SOCKETSERVER_ENABLED: 1
            SKIP_BUILD: 1
            WASMD_ENABLED: 1
          command: |
            [ "<< parameters.simapp >>" = "simapp47" ] && export SIMAPP47_ENABLED=1 SLOW_SIMAPP47_ENABLED=1
            [ "<< parameters.simapp >>" = "simapp50" ] && export SIMAPP50_ENABLED=1 SLOW_SIMAPP50_ENABLED=1
            ./run_examples.sh
      - run:
          name: Stop chains
          command: |
            ./scripts/httpserver/stop.sh
            ./scripts/socketserver/stop.sh
            ./scripts/tendermint/all_stop.sh
            ./scripts/<< parameters.simapp >>/stop.sh
            ./scripts/<< parameters.simapp >>/slow_stop.sh
            ./scripts/wasmd/stop.sh
  test-chrome:
    machine:
      # We can't use a containerized environment since it requires remote docker to start custom containers.
      # However, we can't access the remote docker's network from the primary container. This is a
      # feature, as documented in https://circleci.com/docs/2.0/building-docker-images/#separation-of-environments
      # As a consequence, we cannot use the circleci CLI for this job because "You cannot use the machine
      # executor in local jobs." (https://circleci.com/docs/2.0/local-cli/#limitations-of-running-jobs-locally)
      #
      # Available images: https://circleci.com/developer/machine/image/ubuntu-2004
      # Note that ubuntu-2004:202111-02 and above cause checksum issues when installing yarn packages. No idea why.
      image: ubuntu-2004:202111-02
    resource_class: large
    steps:
      - browser-tools/install-chrome # Slow because apt update but what can you do ü§∑‚Äç
      - run:
          name: Install Git Large File Storage (LFS)
          # In the current image, `sudo apt install git-lfs` requires `sudo apt update` which is too slow
          command: |
            wget -O "$HOME/git-lfs.deb" https://packagecloud.io/github/git-lfs/packages/ubuntu/focal/git-lfs_2.13.3_amd64.deb/download.deb
            sudo dpkg -i "$HOME/git-lfs.deb"
      - checkout
      - run: # start early for less wait time below
          name: Start wasmd
          command: ./scripts/wasmd/start.sh
          background: true
      - run:
          name: Start simapp
          command: ./scripts/simapp50/start.sh
          background: true
      - run:
          name: Start slow simapp
          command: ./scripts/simapp50/slow_start.sh
          background: true
      - run:
          name: Start Tendermint blockchains
          command: ./scripts/tendermint/all_start.sh
          background: true
      - attach_workspace:
          at: /tmp/builds
      - run:
          name: Merge build folders into project (merge with hardlinks)
          command: cp --recursive --link /tmp/builds/* .
      - run:
          # The images comes with preinstalled nvm, which does not work well with non-login shells
          name: Uninstall nvm
          # Moving to trash is faster than deleting (gvfs-trash is not installed on this image)
          command: |
            nvm --version && nvm ls
            mkdir -p ~/.local/share/Trash && mv "$NVM_DIR" ~/.npm ~/.local/share/Trash
      - run:
          name: Install nodejs
          # In the current image, `sudo apt install nodejs` requires `sudo apt update` which is too slow.
          # Follow instructions of https://deb.nodesource.com/ except the last step. Then run
          # `apt download --print-uris nodejs` to get a download URL.
          command: |
            wget -O "$HOME/nodejs.deb" https://deb.nodesource.com/node_18.x/pool/main/n/nodejs/nodejs_18.17.1-1nodesource1_amd64.deb
            sudo dpkg -i "$HOME/nodejs.deb"
      - run:
          name: Install yarn
          command: |
            wget -O "$HOME/yarn.deb" https://dl.yarnpkg.com/debian/pool/main/y/yarn/yarn_1.22.15_all.deb
            sudo dpkg -i "$HOME/yarn.deb"
      - run:
          name: Version information
          command: echo "node $(node --version)"; echo "yarn $(yarn --version)"
      - run:
          name: Install libusb
          # In the current image, `sudo apt install libusb-1.0-0-dev` requires `sudo apt update` which is too slow
          command: |
            wget -O "$HOME/libusb.deb" http://de.archive.ubuntu.com/ubuntu/pool/main/libu/libusb-1.0/libusb-1.0-0-dev_1.0.23-2build1_amd64.deb
            sudo dpkg -i "$HOME/libusb.deb"
      - run:
          name: Install libudev-dev
          # See https://packages.ubuntu.com/focal/libudev-dev (Ubuntu 20.04)
          command: |
            wget -O "$HOME/libudev1.deb" http://security.ubuntu.com/ubuntu/pool/main/s/systemd/libudev1_245.4-4ubuntu3.20_amd64.deb
            wget -O "$HOME/libudev-dev.deb" http://security.ubuntu.com/ubuntu/pool/main/s/systemd/libudev-dev_245.4-4ubuntu3.20_amd64.deb
            sudo dpkg -i "$HOME/libudev1.deb"
            sudo dpkg -i "$HOME/libudev-dev.deb"
      - run:
          name: Install Dependencies
          command: yarn install --immutable --immutable-cache --check-cache
      - run:
          name: Initialize wasmd (deploy contracts and friends)
          command: ./scripts/wasmd/init.sh
      - run:
          name: Start socket server
          command: ./scripts/socketserver/start.sh
      - run:
          name: Start http server
          command: ./scripts/httpserver/start.sh
      - run:
          environment:
            HTTPSERVER_ENABLED: 1
            SIMAPP50_ENABLED: 1
            SLOW_SIMAPP50_ENABLED: 1
            TENDERMINT_ENABLED: 1
            SOCKETSERVER_ENABLED: 1
            SKIP_BUILD: 1
            WASMD_ENABLED: 1
          command: yarn test-chrome
      - run:
          name: Stop chains
          command: |
            ./scripts/httpserver/stop.sh
            ./scripts/socketserver/stop.sh
            ./scripts/tendermint/all_stop.sh
            ./scripts/simapp50/stop.sh
            ./scripts/simapp50/slow_stop.sh
            ./scripts/wasmd/stop.sh
  coverage:
    machine:
      # We can't use a containerized environment since it requires remote docker to start custom containers.
      # However, we can't access the remote docker's network from the primary container. This is a
      # feature, as documented in https://circleci.com/docs/2.0/building-docker-images/#separation-of-environments
      # As a consequence, we cannot use the circleci CLI for this job because "You cannot use the machine
      # executor in local jobs." (https://circleci.com/docs/2.0/local-cli/#limitations-of-running-jobs-locally)
      #
      # Available images: https://circleci.com/developer/machine/image/ubuntu-2004
      # Note that ubuntu-2004:202111-02 and above cause checksum issues when installing yarn packages. No idea why.
      image: ubuntu-2004:202111-02
    resource_class: large
    steps:
      - run:
          name: Install Git Large File Storage (LFS)
          # In the current image, `sudo apt install git-lfs` requires `sudo apt update` which is too slow
          command: |
            wget -O "$HOME/git-lfs.deb" https://packagecloud.io/github/git-lfs/packages/ubuntu/focal/git-lfs_2.13.3_amd64.deb/download.deb
            sudo dpkg -i "$HOME/git-lfs.deb"
      - checkout
      - run: # start early for less wait time below
          name: Start wasmd
          command: ./scripts/wasmd/start.sh
          background: true
      - run:
          name: Start simapp
          command: ./scripts/simapp50/start.sh
          background: true
      - run:
          name: Start slow simapp
          command: ./scripts/simapp50/slow_start.sh
          background: true
      - run:
          name: Start Tendermint blockchains
          command: ./scripts/tendermint/all_start.sh
          background: true
      - attach_workspace:
          at: /tmp/builds
      - run:
          name: Merge build folders into project (merge with hardlinks)
          command: cp --recursive --link /tmp/builds/* .
      - run:
          # The images comes with preinstalled nvm, which does not work well with non-login shells
          name: Uninstall nvm
          # Moving to trash is faster than deleting (gvfs-trash is not installed on this image)
          command: |
            nvm --version && nvm ls
            mkdir -p ~/.local/share/Trash && mv "$NVM_DIR" ~/.npm ~/.local/share/Trash
      - run:
          name: Install nodejs
          # In the current image, `sudo apt install nodejs` requires `sudo apt update` which is too slow.
          # Follow instructions of https://deb.nodesource.com/ except the last step. Then run
          # `apt download --print-uris nodejs` to get a download URL.
          command: |
            wget -O "$HOME/nodejs.deb" https://deb.nodesource.com/node_18.x/pool/main/n/nodejs/nodejs_18.17.1-1nodesource1_amd64.deb
            sudo dpkg -i "$HOME/nodejs.deb"
      - run:
          name: Install yarn
          command: |
            wget -O "$HOME/yarn.deb" https://dl.yarnpkg.com/debian/pool/main/y/yarn/yarn_1.22.15_all.deb
            sudo dpkg -i "$HOME/yarn.deb"
      - run:
          name: Version information
          command: echo "node $(node --version)"; echo "yarn $(yarn --version)"
      - run:
          name: Install libusb
          # In the current image, `sudo apt install libusb-1.0-0-dev` requires `sudo apt update` which is too slow
          command: |
            wget -O "$HOME/libusb.deb" http://de.archive.ubuntu.com/ubuntu/pool/main/libu/libusb-1.0/libusb-1.0-0-dev_1.0.23-2build1_amd64.deb
            sudo dpkg -i "$HOME/libusb.deb"
      - run:
          name: Install libudev-dev
          # See https://packages.ubuntu.com/focal/libudev-dev (Ubuntu 20.04)
          command: |
            wget -O "$HOME/libudev1.deb" http://security.ubuntu.com/ubuntu/pool/main/s/systemd/libudev1_245.4-4ubuntu3.20_amd64.deb
            wget -O "$HOME/libudev-dev.deb" http://security.ubuntu.com/ubuntu/pool/main/s/systemd/libudev-dev_245.4-4ubuntu3.20_amd64.deb
            sudo dpkg -i "$HOME/libudev1.deb"
            sudo dpkg -i "$HOME/libudev-dev.deb"
      - run:
          name: Install Dependencies
          command: yarn install --immutable --immutable-cache --check-cache
      - run:
          name: Initialize wasmd (deploy contracts and friends)
          command: ./scripts/wasmd/init.sh
      - run:
          name: Start socket server
          command: ./scripts/socketserver/start.sh
      - run:
          name: Start http server
          command: ./scripts/httpserver/start.sh
      - run:
          environment:
            HTTPSERVER_ENABLED: 1
            SIMAPP50_ENABLED: 1
            SLOW_SIMAPP50_ENABLED: 1
            TENDERMINT_ENABLED: 1
            SOCKETSERVER_ENABLED: 1
            SKIP_BUILD: 1
            WASMD_ENABLED: 1
          command: yarn coverage
      - run:
          name: Upload coverage report
          command: npx codecov
      - run:
          name: Stop chains
          command: |
            ./scripts/httpserver/stop.sh
            ./scripts/socketserver/stop.sh
            ./scripts/tendermint/all_stop.sh
            ./scripts/simapp50/stop.sh
            ./scripts/simapp50/slow_stop.sh
            ./scripts/wasmd/stop.sh
